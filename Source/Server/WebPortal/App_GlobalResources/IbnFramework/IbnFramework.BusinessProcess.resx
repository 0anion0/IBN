<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityType" xml:space="preserve">
    <value>Activity Type</value>
  </data>
  <data name="ApprovalBlock" xml:space="preserve">
    <value>Approval Block</value>
  </data>
  <data name="ApprovalElement" xml:space="preserve">
    <value>Approval Element</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="AssignmentResultAccepted" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="AssignmentResultCancelled" xml:space="preserve">
    <value>Cancelled</value>
  </data>
  <data name="AssignmentResultDeclined" xml:space="preserve">
    <value>Declined</value>
  </data>
  <data name="AssignmentStateActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="AssignmentStateCompleted" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="AssignmentStatePending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="AssignmentStateSuspended" xml:space="preserve">
    <value>Suspended</value>
  </data>
  <data name="BusinessProcessEditing" xml:space="preserve">
    <value>Workflow Editing</value>
  </data>
  <data name="Deny" xml:space="preserve">
    <value>Deny</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Design" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="MyAssignments" xml:space="preserve">
    <value>My Assignments</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New Workflow</value>
  </data>
  <data name="NoAssignments" xml:space="preserve">
    <value>There are no assignments in this workflow.</value>
  </data>
  <data name="Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="SchemaMaster" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="WFResultAccepted" xml:space="preserve">
    <value>Accepted</value>
  </data>
  <data name="WFResultDeclined" xml:space="preserve">
    <value>Declined</value>
  </data>
  <data name="WFResume" xml:space="preserve">
    <value>Resume</value>
  </data>
  <data name="WFStart" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="WFStateActive" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="WFStateCompleted" xml:space="preserve">
    <value>Completed</value>
  </data>
  <data name="WFStatePending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="WFStateSuspended" xml:space="preserve">
    <value>Suspended</value>
  </data>
  <data name="WFSuspend" xml:space="preserve">
    <value>Suspend</value>
  </data>
  <data name="WFTerminate" xml:space="preserve">
    <value>Terminate</value>
  </data>
  <data name="Workflow" xml:space="preserve">
    <value>Workflow</value>
  </data>
  <data name="WorkflowInfo" xml:space="preserve">
    <value>Workflow Info</value>
  </data>
  <data name="Workflows" xml:space="preserve">
    <value>Workflows</value>
  </data>
  <data name="WFResultCanceled" xml:space="preserve">
    <value>Canceled</value>
  </data>
  <data name="WFStateClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="AssignmentStateClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="BlockActivityTypeAll" xml:space="preserve">
    <value>All activity must be completed</value>
  </data>
  <data name="BlockActivityTypeAny" xml:space="preserve">
    <value>At least one activity must be completed</value>
  </data>
  <data name="BlockActivityType" xml:space="preserve">
    <value>Completion Type</value>
  </data>
  <data name="NoSubject" xml:space="preserve">
    <value>[ without subject ]</value>
  </data>
  <data name="EditActivity" xml:space="preserve">
    <value>Edit activity</value>
  </data>
  <data name="NewActivity" xml:space="preserve">
    <value>New activity</value>
  </data>
  <data name="DeleteActivity" xml:space="preserve">
    <value>Delete this activity?</value>
  </data>
  <data name="WorkflowSchema" xml:space="preserve">
    <value>Workflow Schema</value>
  </data>
  <data name="MoveTo" xml:space="preserve">
    <value>Move To...</value>
  </data>
  <data name="Insert" xml:space="preserve">
    <value>Insert</value>
  </data>
  <data name="InsertAfter" xml:space="preserve">
    <value>Insert After</value>
  </data>
  <data name="InsertBefore" xml:space="preserve">
    <value>Insert Before</value>
  </data>
  <data name="InsertChild" xml:space="preserve">
    <value>Add Child Item</value>
  </data>
  <data name="SimpleApproval" xml:space="preserve">
    <value>Simple Approval</value>
  </data>
  <data name="Participants" xml:space="preserve">
    <value>Participants</value>
  </data>
  <data name="ActivityStatusCanceling" xml:space="preserve">
    <value>Canceling</value>
  </data>
  <data name="ActivityStatusClosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="ActivityStatusCompensating" xml:space="preserve">
    <value>Compensating</value>
  </data>
  <data name="ActivityStatusExecuting" xml:space="preserve">
    <value>Executing</value>
  </data>
  <data name="ActivityStatusFaulting" xml:space="preserve">
    <value>Faulting</value>
  </data>
  <data name="ActivityStatusInitialized" xml:space="preserve">
    <value>Initialized</value>
  </data>
  <data name="MoveDown" xml:space="preserve">
    <value>Down</value>
  </data>
  <data name="MoveUp" xml:space="preserve">
    <value>Up</value>
  </data>
  <data name="TemplateList" xml:space="preserve">
    <value>Template List</value>
  </data>
  <data name="NewTemplate" xml:space="preserve">
    <value>New Template</value>
  </data>
  <data name="AllTemplates" xml:space="preserve">
    <value>All Templates</value>
  </data>
  <data name="WorkflowTemplate" xml:space="preserve">
    <value>Workflow Template</value>
  </data>
  <data name="WorkflowTemplates" xml:space="preserve">
    <value>Workflow Templates</value>
  </data>
  <data name="TemplateEditing" xml:space="preserve">
    <value>Template Editing</value>
  </data>
  <data name="ObjectTypes" xml:space="preserve">
    <value>Object Types</value>
  </data>
  <data name="CreateByTemplate" xml:space="preserve">
    <value>Create by Template</value>
  </data>
  <data name="SelectTemplate" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="CommentRequired" xml:space="preserve">
    <value>Comment is required.</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="BusinessProcessDuplication" xml:space="preserve">
    <value>Workflow Duplication</value>
  </data>
  <data name="SaveAsTemplate" xml:space="preserve">
    <value>Save as Template</value>
  </data>
  <data name="Participant" xml:space="preserve">
    <value>Participant</value>
  </data>
  <data name="ActiveAssignments" xml:space="preserve">
    <value>Active Assignments</value>
  </data>
  <data name="Reassign" xml:space="preserve">
    <value>Reassign</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="DurationDays" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="DurationHours" xml:space="preserve">
    <value>hours</value>
  </data>
  <data name="FinishDate" xml:space="preserve">
    <value>Finish Date</value>
  </data>
  <data name="RestrictionByDate" xml:space="preserve">
    <value>By Finish Date</value>
  </data>
  <data name="RestrictionByDuration" xml:space="preserve">
    <value>By Duration</value>
  </data>
  <data name="RestrictionType" xml:space="preserve">
    <value>Restrictions</value>
  </data>
  <data name="ApprovalWithParallelBlocks" xml:space="preserve">
    <value>Approval with Parallel Blocks</value>
  </data>
  <data name="AddBlock" xml:space="preserve">
    <value>Add Block</value>
  </data>
  <data name="ParallelBlock" xml:space="preserve">
    <value>[ Approval Block ]</value>
  </data>
  <data name="SelectNewParticipant" xml:space="preserve">
    <value>Select New Participant</value>
  </data>
  <data name="AssignmentEditing" xml:space="preserve">
    <value>Assignment Editing</value>
  </data>
  <data name="ReadOnly" xml:space="preserve">
    <value>Read-Only</value>
  </data>
  <data name="CurrentDate" xml:space="preserve">
    <value>Current Date</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="ClosedBy" xml:space="preserve">
    <value>Closed By</value>
  </data>
  <data name="LockLibrary" xml:space="preserve">
    <value>Lock Library after Completion</value>
  </data>
  <data name="TemplateGroup" xml:space="preserve">
    <value>Template Group</value>
  </data>
  <data name="TemplateGroups" xml:space="preserve">
    <value>Template Groups</value>
  </data>
  <data name="TemplatesByGroups" xml:space="preserve">
    <value>Templates by Groups</value>
  </data>
  <data name="NoTemplates" xml:space="preserve">
    <value>There are no templates for this group.</value>
  </data>
  <data name="AssignmentOverdueAutoCompleteWithAccept" xml:space="preserve">
    <value>Auto Complete</value>
  </data>
  <data name="AssignmentOverdueAutoCompleteWithDecline" xml:space="preserve">
    <value>Auto Decline</value>
  </data>
  <data name="AssignmentOverdueNoAction" xml:space="preserve">
    <value>Set Overdue State</value>
  </data>
  <data name="OverdueAssignments" xml:space="preserve">
    <value>Overdue Assignments</value>
  </data>
  <data name="StartInstanceWarning" xml:space="preserve">
    <value>Planned finish date was delayed (expired), change the parameters of the business process and try to start the process again.</value>
  </data>
</root>