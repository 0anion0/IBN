namespace Mediachase.UI.Web.Reports.Modules
{
	using System;
	using System.Collections;
	using System.Data;
	using System.Drawing;
	using System.Web;
	using System.Web.UI.WebControls;
	using System.Web.UI.HtmlControls;
	using Mediachase.UI.Web.Util;
	using Mediachase.Ibn.Web.Interfaces;
	using System.Collections.Generic;
	using System.Globalization;
	using System.Web.UI;
	using System.Linq;

	/// <summary>
	///		Summary description for DictionaryFilter.
	/// </summary>
	public partial class DictionaryFilter : System.Web.UI.UserControl, IFilterControl
	{

		protected void Page_Load(object sender, System.EventArgs e)
		{
		}

		#region Web Form Designer generated code
		override protected void OnInit(EventArgs e)
		{
			//
			// CODEGEN: This call is required by the ASP.NET Web Form Designer.
			//
			InitializeComponent();
			base.OnInit(e);
		}

		/// <summary>
		///		Required method for Designer support - do not modify
		///		the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
		}
		#endregion

		#region Implementation of IFilterControl
		#region Value
		public object Value
		{
			set
			{
				if (value != null)
				{
					string[] items = (string[])value;
					foreach (DataGridItem dgi in grdMain.Items)
					{
						foreach (Control control in dgi.Cells[1].Controls)
						{
							if (control is CheckBox)
							{
								CheckBox checkBox = (CheckBox)control;
								string itemId = dgi.Cells[0].Text;

								if (items.Any(x => x == itemId))
									checkBox.Checked = true;
								else
									checkBox.Checked = false;
							}
						}
					}
				}
			}
			get
			{
				object retval = null;
				ArrayList items = new ArrayList();
				foreach (DataGridItem dgi in grdMain.Items)
				{
					foreach (Control control in dgi.Cells[1].Controls)
					{
						if (control is CheckBox)
						{
							CheckBox checkBox = (CheckBox)control;
							if (checkBox.Checked)
							{
								items.Add(dgi.Cells[0].Text);
							}
						}
					}
				}
				if (items.Count > 0)
					retval = items.ToArray(typeof(string));
				return retval;
			}
		} 
		#endregion

		#region FilterTitle
		public string FilterTitle
		{
			set
			{
				lblTitle.Text = value;
			}
			get
			{
				return lblTitle.Text;
			}
		} 
		#endregion

		private string filterField = "";
		#region FilterField
		public string FilterField
		{
			set
			{
				filterField = value;
			}
			get
			{
				return filterField;
			}
		} 
		#endregion

		#region FilterType
		public string FilterType
		{
			get
			{
				return "Dictionary";
			}
		} 
		#endregion

		#region InitControl
		public void InitControl(object reader)
		{
			DataTable dt = new DataTable();
			dt.Locale = CultureInfo.InvariantCulture;
			dt.Columns.Add("Id", typeof(string));
			dt.Columns.Add("Name", typeof(string));

			using (IDataReader r = (IDataReader)reader)
			{
				while (r.Read())
				{
					DataRow row = dt.NewRow();
					row["Id"] = r["Id"].ToString();
					row["Name"] = "&nbsp;" + CommonHelper.GetResFileString(r["Value"].ToString());
					dt.Rows.Add(row);
				}
			}
			DataView dv = dt.DefaultView;
			dv.Sort = "Name";
			grdMain.DataSource = dv;
			grdMain.DataBind();
		} 
		#endregion
		#endregion

		#region tdTitle
		//===========================================================================
		// This public property was added by conversion wizard to allow the access of a protected, autogenerated member variable tdTitle.
		//===========================================================================
		public System.Web.UI.HtmlControls.HtmlTableCell tdTitle
		{
			get { return Migrated_tdTitle; }
			//set { Migrated_tdTitle = value; }
		} 
		#endregion
	}
}
